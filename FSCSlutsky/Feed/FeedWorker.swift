//
//  FeedWorker.swift
//  FSCSlutsky
//
//  Created by Павел on 12.09.2023.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

class FeedService {
    var authService: AuthService
    var networking: NetworkingProtocol
    var fetcher: DataFetcher
    private var feedResponse: Feeds?
    private var nextFrom: Int = 0
    
    init() {
        self.authService = SceneDelegate.shared().authService
        self.networking = NetworkService(authService: authService)
        self.fetcher = NetworkDataFetcher(networking: networking)
    }
    
    func getFeed(completion: @escaping (Feeds) -> Void) {
        fetcher.getFeed(nextFrom: nextFrom) { [weak self] (feed) in
            guard let feed = feed else { return }
            if self?.feedResponse == nil {
                self?.feedResponse = feed
            } else {
                self?.feedResponse?.items.append(contentsOf: feed.items)
            }
            guard let feedResponse = self?.feedResponse else { return }
            completion(feedResponse)
        }
        nextFrom = nextFrom + API.count
    }
}
